@model CarShop.ViewModels.CartViewModel
@using System.Text.Json.Serialization
@using System.Text.Json

    <h2>Cart</h2>
        <table class="table">
            <thead>
                <tr>
                    <th></th>
                    <th>Car</th>
                    <th class="text-right">Price</th>
                </tr>
            </thead>
            <tbody>
                @foreach(var item in Model.Cart.CartItems)
                    {
                        <tr>
                            <td class="text-left"><a asp-action="RemoveFromCart" asp-controller="Cart" asp-route-carId="@item.car.CarId" asp-route-returnUrl="@Model.ReturnUrl">&times;</a></td>
                            <td class="text-left">@item.car.Producer.Name @item.car.Model @item.car.Year</td>
                            <td class="text-right">@item.car.Price $</td>
                        </tr>
                    }
            </tbody>
            <tfoot>
                <tr>
                    <td colspan="3" class="text-right">Total:</td>
                    <td class="text-right">@Model.Cart.TotalPrice() $</td>
                </tr>
            </tfoot>
        </table>

        <div>
            <a class="btn btn-primary" asp-action="Clear" asp-controller="Cart" asp-route-returnUrl="@Model.ReturnUrl">Clear</a>
            <a class="btn btn-primary" href="@Model.ReturnUrl">Back to Transport</a>
            @if (Model.Cart.CartItems.Count != 0)
            {
                <a id="toOrder" class="btn btn-primary" asp-action="Create" asp-controller="Orders" asp-route-returnUrl="@Model.ReturnUrl" asp-route-orderedCars="@JsonSerializer.Serialize(Model.Cart.CartItems)">Buy</a>
            }
        </div>


